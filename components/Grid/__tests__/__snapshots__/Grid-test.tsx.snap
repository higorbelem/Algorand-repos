// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Grid component Renders correctly 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "gap": 10,
      "padding": 20,
      "paddingTop": 0,
    }
  }
  data={
    [
      {
        "allow_forking": true,
        "archive_url": "https://api.github.com/repos/perawallet/pera-wallet/{archive_format}{/ref}",
        "archived": false,
        "assignees_url": "https://api.github.com/repos/perawallet/pera-wallet/assignees{/user}",
        "blobs_url": "https://api.github.com/repos/perawallet/pera-wallet/git/blobs{/sha}",
        "branches_url": "https://api.github.com/repos/perawallet/pera-wallet/branches{/branch}",
        "clone_url": "https://github.com/perawallet/pera-wallet.git",
        "collaborators_url": "https://api.github.com/repos/perawallet/pera-wallet/collaborators{/collaborator}",
        "comments_url": "https://api.github.com/repos/perawallet/pera-wallet/comments{/number}",
        "commits_url": "https://api.github.com/repos/perawallet/pera-wallet/commits{/sha}",
        "compare_url": "https://api.github.com/repos/perawallet/pera-wallet/compare/{base}...{head}",
        "contents_url": "https://api.github.com/repos/perawallet/pera-wallet/contents/{+path}",
        "contributors_url": "https://api.github.com/repos/perawallet/pera-wallet/contributors",
        "created_at": "2021-05-04T19:08:11Z",
        "default_branch": "master",
        "deployments_url": "https://api.github.com/repos/perawallet/pera-wallet/deployments",
        "description": "Source code for Pera Wallet, simply the best Algorand wallet.",
        "disabled": false,
        "downloads_url": "https://api.github.com/repos/perawallet/pera-wallet/downloads",
        "events_url": "https://api.github.com/repos/perawallet/pera-wallet/events",
        "fork": false,
        "forks": 60,
        "forks_count": 60,
        "forks_url": "https://api.github.com/repos/perawallet/pera-wallet/forks",
        "full_name": "perawallet/pera-wallet",
        "git_commits_url": "https://api.github.com/repos/perawallet/pera-wallet/git/commits{/sha}",
        "git_refs_url": "https://api.github.com/repos/perawallet/pera-wallet/git/refs{/sha}",
        "git_tags_url": "https://api.github.com/repos/perawallet/pera-wallet/git/tags{/sha}",
        "git_url": "git://github.com/perawallet/pera-wallet.git",
        "has_discussions": false,
        "has_downloads": true,
        "has_issues": true,
        "has_pages": false,
        "has_projects": true,
        "has_wiki": true,
        "homepage": "https://perawallet.app",
        "hooks_url": "https://api.github.com/repos/perawallet/pera-wallet/hooks",
        "html_url": "https://github.com/perawallet/pera-wallet",
        "id": 364359642,
        "is_template": false,
        "issue_comment_url": "https://api.github.com/repos/perawallet/pera-wallet/issues/comments{/number}",
        "issue_events_url": "https://api.github.com/repos/perawallet/pera-wallet/issues/events{/number}",
        "issues_url": "https://api.github.com/repos/perawallet/pera-wallet/issues{/number}",
        "keys_url": "https://api.github.com/repos/perawallet/pera-wallet/keys{/key_id}",
        "labels_url": "https://api.github.com/repos/perawallet/pera-wallet/labels{/name}",
        "language": "Swift",
        "languages_url": "https://api.github.com/repos/perawallet/pera-wallet/languages",
        "license": {
          "key": "other",
          "name": "Other",
          "node_id": "MDc6TGljZW5zZTA=",
          "spdx_id": "NOASSERTION",
          "url": null,
        },
        "merges_url": "https://api.github.com/repos/perawallet/pera-wallet/merges",
        "milestones_url": "https://api.github.com/repos/perawallet/pera-wallet/milestones{/number}",
        "mirror_url": null,
        "name": "pera-wallet",
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjQzNTk2NDI=",
        "notifications_url": "https://api.github.com/repos/perawallet/pera-wallet/notifications{?since,all,participating}",
        "open_issues": 22,
        "open_issues_count": 22,
        "owner": {
          "avatar_url": "https://avatars.githubusercontent.com/u/98968122?v=4",
          "events_url": "https://api.github.com/users/perawallet/events{/privacy}",
          "followers_url": "https://api.github.com/users/perawallet/followers",
          "following_url": "https://api.github.com/users/perawallet/following{/other_user}",
          "gists_url": "https://api.github.com/users/perawallet/gists{/gist_id}",
          "gravatar_id": "",
          "html_url": "https://github.com/perawallet",
          "id": 98968122,
          "login": "perawallet",
          "node_id": "O_kgDOBeYiOg",
          "organizations_url": "https://api.github.com/users/perawallet/orgs",
          "received_events_url": "https://api.github.com/users/perawallet/received_events",
          "repos_url": "https://api.github.com/users/perawallet/repos",
          "site_admin": false,
          "starred_url": "https://api.github.com/users/perawallet/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/perawallet/subscriptions",
          "type": "Organization",
          "url": "https://api.github.com/users/perawallet",
          "user_view_type": "public",
        },
        "permissions": {
          "admin": false,
          "maintain": false,
          "pull": true,
          "push": false,
          "triage": false,
        },
        "private": false,
        "pulls_url": "https://api.github.com/repos/perawallet/pera-wallet/pulls{/number}",
        "pushed_at": "2024-08-26T14:42:19Z",
        "releases_url": "https://api.github.com/repos/perawallet/pera-wallet/releases{/id}",
        "size": 241619,
        "ssh_url": "git@github.com:perawallet/pera-wallet.git",
        "stargazers_count": 190,
        "stargazers_url": "https://api.github.com/repos/perawallet/pera-wallet/stargazers",
        "statuses_url": "https://api.github.com/repos/perawallet/pera-wallet/statuses/{sha}",
        "subscribers_url": "https://api.github.com/repos/perawallet/pera-wallet/subscribers",
        "subscription_url": "https://api.github.com/repos/perawallet/pera-wallet/subscription",
        "svn_url": "https://github.com/perawallet/pera-wallet",
        "tags_url": "https://api.github.com/repos/perawallet/pera-wallet/tags",
        "teams_url": "https://api.github.com/repos/perawallet/pera-wallet/teams",
        "topics": [
          "algorand",
          "algorand-wallet",
          "android",
          "blockchain",
          "crypto",
          "cryptocurrency",
          "ios",
          "wallet",
        ],
        "trees_url": "https://api.github.com/repos/perawallet/pera-wallet/git/trees{/sha}",
        "updated_at": "2024-12-29T03:08:22Z",
        "url": "https://api.github.com/repos/perawallet/pera-wallet",
        "visibility": "public",
        "watchers": 190,
        "watchers_count": 190,
        "web_commit_signoff_required": false,
      },
      {
        "allow_forking": true,
        "archive_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/{archive_format}{/ref}",
        "archived": false,
        "assignees_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/assignees{/user}",
        "blobs_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/git/blobs{/sha}",
        "branches_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/branches{/branch}",
        "clone_url": "https://github.com/perawallet/kotlin-walletconnect-lib.git",
        "collaborators_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/collaborators{/collaborator}",
        "comments_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/comments{/number}",
        "commits_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/commits{/sha}",
        "compare_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/compare/{base}...{head}",
        "contents_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/contents/{+path}",
        "contributors_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/contributors",
        "created_at": "2021-07-13T11:17:00Z",
        "default_branch": "master",
        "deployments_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/deployments",
        "description": "library to use WalletConnect with Kotlin or Java",
        "disabled": false,
        "downloads_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/downloads",
        "events_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/events",
        "fork": true,
        "forks": 2,
        "forks_count": 2,
        "forks_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/forks",
        "full_name": "perawallet/kotlin-walletconnect-lib",
        "git_commits_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/git/commits{/sha}",
        "git_refs_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/git/refs{/sha}",
        "git_tags_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/git/tags{/sha}",
        "git_url": "git://github.com/perawallet/kotlin-walletconnect-lib.git",
        "has_discussions": false,
        "has_downloads": true,
        "has_issues": false,
        "has_pages": false,
        "has_projects": true,
        "has_wiki": true,
        "homepage": null,
        "hooks_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/hooks",
        "html_url": "https://github.com/perawallet/kotlin-walletconnect-lib",
        "id": 385577090,
        "is_template": false,
        "issue_comment_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/issues/comments{/number}",
        "issue_events_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/issues/events{/number}",
        "issues_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/issues{/number}",
        "keys_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/keys{/key_id}",
        "labels_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/labels{/name}",
        "language": "Kotlin",
        "languages_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/languages",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
        },
        "merges_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/merges",
        "milestones_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/milestones{/number}",
        "mirror_url": null,
        "name": "kotlin-walletconnect-lib",
        "node_id": "MDEwOlJlcG9zaXRvcnkzODU1NzcwOTA=",
        "notifications_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/notifications{?since,all,participating}",
        "open_issues": 1,
        "open_issues_count": 1,
        "owner": {
          "avatar_url": "https://avatars.githubusercontent.com/u/98968122?v=4",
          "events_url": "https://api.github.com/users/perawallet/events{/privacy}",
          "followers_url": "https://api.github.com/users/perawallet/followers",
          "following_url": "https://api.github.com/users/perawallet/following{/other_user}",
          "gists_url": "https://api.github.com/users/perawallet/gists{/gist_id}",
          "gravatar_id": "",
          "html_url": "https://github.com/perawallet",
          "id": 98968122,
          "login": "perawallet",
          "node_id": "O_kgDOBeYiOg",
          "organizations_url": "https://api.github.com/users/perawallet/orgs",
          "received_events_url": "https://api.github.com/users/perawallet/received_events",
          "repos_url": "https://api.github.com/users/perawallet/repos",
          "site_admin": false,
          "starred_url": "https://api.github.com/users/perawallet/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/perawallet/subscriptions",
          "type": "Organization",
          "url": "https://api.github.com/users/perawallet",
          "user_view_type": "public",
        },
        "permissions": {
          "admin": false,
          "maintain": false,
          "pull": true,
          "push": false,
          "triage": false,
        },
        "private": false,
        "pulls_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/pulls{/number}",
        "pushed_at": "2024-01-29T11:19:58Z",
        "releases_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/releases{/id}",
        "size": 243,
        "ssh_url": "git@github.com:perawallet/kotlin-walletconnect-lib.git",
        "stargazers_count": 0,
        "stargazers_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/stargazers",
        "statuses_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/statuses/{sha}",
        "subscribers_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/subscribers",
        "subscription_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/subscription",
        "svn_url": "https://github.com/perawallet/kotlin-walletconnect-lib",
        "tags_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/tags",
        "teams_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/teams",
        "topics": [],
        "trees_url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib/git/trees{/sha}",
        "updated_at": "2024-01-29T11:20:01Z",
        "url": "https://api.github.com/repos/perawallet/kotlin-walletconnect-lib",
        "visibility": "public",
        "watchers": 0,
        "watchers_count": 0,
        "web_commit_signoff_required": false,
      },
      {
        "allow_forking": true,
        "archive_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/{archive_format}{/ref}",
        "archived": false,
        "assignees_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/assignees{/user}",
        "blobs_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/git/blobs{/sha}",
        "branches_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/branches{/branch}",
        "clone_url": "https://github.com/perawallet/ActiveLabel.swift.git",
        "collaborators_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/collaborators{/collaborator}",
        "comments_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/comments{/number}",
        "commits_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/commits{/sha}",
        "compare_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/compare/{base}...{head}",
        "contents_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/contents/{+path}",
        "contributors_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/contributors",
        "created_at": "2022-03-28T09:42:40Z",
        "default_branch": "master",
        "deployments_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/deployments",
        "description": "UILabel drop-in replacement supporting Hashtags (#), Mentions (@) and URLs (http://) written in Swift",
        "disabled": false,
        "downloads_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/downloads",
        "events_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/events",
        "fork": true,
        "forks": 1,
        "forks_count": 1,
        "forks_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/forks",
        "full_name": "perawallet/ActiveLabel.swift",
        "git_commits_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/git/commits{/sha}",
        "git_refs_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/git/refs{/sha}",
        "git_tags_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/git/tags{/sha}",
        "git_url": "git://github.com/perawallet/ActiveLabel.swift.git",
        "has_discussions": false,
        "has_downloads": true,
        "has_issues": false,
        "has_pages": false,
        "has_projects": true,
        "has_wiki": true,
        "homepage": "",
        "hooks_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/hooks",
        "html_url": "https://github.com/perawallet/ActiveLabel.swift",
        "id": 474937400,
        "is_template": false,
        "issue_comment_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/issues/comments{/number}",
        "issue_events_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/issues/events{/number}",
        "issues_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/issues{/number}",
        "keys_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/keys{/key_id}",
        "labels_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/labels{/name}",
        "language": "Swift",
        "languages_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/languages",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
        },
        "merges_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/merges",
        "milestones_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/milestones{/number}",
        "mirror_url": null,
        "name": "ActiveLabel.swift",
        "node_id": "R_kgDOHE74OA",
        "notifications_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/notifications{?since,all,participating}",
        "open_issues": 0,
        "open_issues_count": 0,
        "owner": {
          "avatar_url": "https://avatars.githubusercontent.com/u/98968122?v=4",
          "events_url": "https://api.github.com/users/perawallet/events{/privacy}",
          "followers_url": "https://api.github.com/users/perawallet/followers",
          "following_url": "https://api.github.com/users/perawallet/following{/other_user}",
          "gists_url": "https://api.github.com/users/perawallet/gists{/gist_id}",
          "gravatar_id": "",
          "html_url": "https://github.com/perawallet",
          "id": 98968122,
          "login": "perawallet",
          "node_id": "O_kgDOBeYiOg",
          "organizations_url": "https://api.github.com/users/perawallet/orgs",
          "received_events_url": "https://api.github.com/users/perawallet/received_events",
          "repos_url": "https://api.github.com/users/perawallet/repos",
          "site_admin": false,
          "starred_url": "https://api.github.com/users/perawallet/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/perawallet/subscriptions",
          "type": "Organization",
          "url": "https://api.github.com/users/perawallet",
          "user_view_type": "public",
        },
        "permissions": {
          "admin": false,
          "maintain": false,
          "pull": true,
          "push": false,
          "triage": false,
        },
        "private": false,
        "pulls_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/pulls{/number}",
        "pushed_at": "2022-03-28T10:35:04Z",
        "releases_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/releases{/id}",
        "size": 1442,
        "ssh_url": "git@github.com:perawallet/ActiveLabel.swift.git",
        "stargazers_count": 1,
        "stargazers_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/stargazers",
        "statuses_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/statuses/{sha}",
        "subscribers_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/subscribers",
        "subscription_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/subscription",
        "svn_url": "https://github.com/perawallet/ActiveLabel.swift",
        "tags_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/tags",
        "teams_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/teams",
        "topics": [],
        "trees_url": "https://api.github.com/repos/perawallet/ActiveLabel.swift/git/trees{/sha}",
        "updated_at": "2024-10-20T21:38:02Z",
        "url": "https://api.github.com/repos/perawallet/ActiveLabel.swift",
        "visibility": "public",
        "watchers": 1,
        "watchers_count": 1,
        "web_commit_signoff_required": false,
      },
      {
        "allow_forking": true,
        "archive_url": "https://api.github.com/repos/perawallet/connect/{archive_format}{/ref}",
        "archived": false,
        "assignees_url": "https://api.github.com/repos/perawallet/connect/assignees{/user}",
        "blobs_url": "https://api.github.com/repos/perawallet/connect/git/blobs{/sha}",
        "branches_url": "https://api.github.com/repos/perawallet/connect/branches{/branch}",
        "clone_url": "https://github.com/perawallet/connect.git",
        "collaborators_url": "https://api.github.com/repos/perawallet/connect/collaborators{/collaborator}",
        "comments_url": "https://api.github.com/repos/perawallet/connect/comments{/number}",
        "commits_url": "https://api.github.com/repos/perawallet/connect/commits{/sha}",
        "compare_url": "https://api.github.com/repos/perawallet/connect/compare/{base}...{head}",
        "contents_url": "https://api.github.com/repos/perawallet/connect/contents/{+path}",
        "contributors_url": "https://api.github.com/repos/perawallet/connect/contributors",
        "created_at": "2022-04-06T17:40:46Z",
        "default_branch": "main",
        "deployments_url": "https://api.github.com/repos/perawallet/connect/deployments",
        "description": "JavaScript SDK for integrating Pera Wallet to web applications.",
        "disabled": false,
        "downloads_url": "https://api.github.com/repos/perawallet/connect/downloads",
        "events_url": "https://api.github.com/repos/perawallet/connect/events",
        "fork": false,
        "forks": 21,
        "forks_count": 21,
        "forks_url": "https://api.github.com/repos/perawallet/connect/forks",
        "full_name": "perawallet/connect",
        "git_commits_url": "https://api.github.com/repos/perawallet/connect/git/commits{/sha}",
        "git_refs_url": "https://api.github.com/repos/perawallet/connect/git/refs{/sha}",
        "git_tags_url": "https://api.github.com/repos/perawallet/connect/git/tags{/sha}",
        "git_url": "git://github.com/perawallet/connect.git",
        "has_discussions": false,
        "has_downloads": true,
        "has_issues": true,
        "has_pages": false,
        "has_projects": true,
        "has_wiki": true,
        "homepage": "https://perawallet.app",
        "hooks_url": "https://api.github.com/repos/perawallet/connect/hooks",
        "html_url": "https://github.com/perawallet/connect",
        "id": 478665103,
        "is_template": false,
        "issue_comment_url": "https://api.github.com/repos/perawallet/connect/issues/comments{/number}",
        "issue_events_url": "https://api.github.com/repos/perawallet/connect/issues/events{/number}",
        "issues_url": "https://api.github.com/repos/perawallet/connect/issues{/number}",
        "keys_url": "https://api.github.com/repos/perawallet/connect/keys{/key_id}",
        "labels_url": "https://api.github.com/repos/perawallet/connect/labels{/name}",
        "language": "TypeScript",
        "languages_url": "https://api.github.com/repos/perawallet/connect/languages",
        "license": {
          "key": "other",
          "name": "Other",
          "node_id": "MDc6TGljZW5zZTA=",
          "spdx_id": "NOASSERTION",
          "url": null,
        },
        "merges_url": "https://api.github.com/repos/perawallet/connect/merges",
        "milestones_url": "https://api.github.com/repos/perawallet/connect/milestones{/number}",
        "mirror_url": null,
        "name": "connect",
        "node_id": "R_kgDOHIfZjw",
        "notifications_url": "https://api.github.com/repos/perawallet/connect/notifications{?since,all,participating}",
        "open_issues": 19,
        "open_issues_count": 19,
        "owner": {
          "avatar_url": "https://avatars.githubusercontent.com/u/98968122?v=4",
          "events_url": "https://api.github.com/users/perawallet/events{/privacy}",
          "followers_url": "https://api.github.com/users/perawallet/followers",
          "following_url": "https://api.github.com/users/perawallet/following{/other_user}",
          "gists_url": "https://api.github.com/users/perawallet/gists{/gist_id}",
          "gravatar_id": "",
          "html_url": "https://github.com/perawallet",
          "id": 98968122,
          "login": "perawallet",
          "node_id": "O_kgDOBeYiOg",
          "organizations_url": "https://api.github.com/users/perawallet/orgs",
          "received_events_url": "https://api.github.com/users/perawallet/received_events",
          "repos_url": "https://api.github.com/users/perawallet/repos",
          "site_admin": false,
          "starred_url": "https://api.github.com/users/perawallet/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/perawallet/subscriptions",
          "type": "Organization",
          "url": "https://api.github.com/users/perawallet",
          "user_view_type": "public",
        },
        "permissions": {
          "admin": false,
          "maintain": false,
          "pull": true,
          "push": false,
          "triage": false,
        },
        "private": false,
        "pulls_url": "https://api.github.com/repos/perawallet/connect/pulls{/number}",
        "pushed_at": "2025-01-21T07:28:09Z",
        "releases_url": "https://api.github.com/repos/perawallet/connect/releases{/id}",
        "size": 2202,
        "ssh_url": "git@github.com:perawallet/connect.git",
        "stargazers_count": 67,
        "stargazers_url": "https://api.github.com/repos/perawallet/connect/stargazers",
        "statuses_url": "https://api.github.com/repos/perawallet/connect/statuses/{sha}",
        "subscribers_url": "https://api.github.com/repos/perawallet/connect/subscribers",
        "subscription_url": "https://api.github.com/repos/perawallet/connect/subscription",
        "svn_url": "https://github.com/perawallet/connect",
        "tags_url": "https://api.github.com/repos/perawallet/connect/tags",
        "teams_url": "https://api.github.com/repos/perawallet/connect/teams",
        "topics": [],
        "trees_url": "https://api.github.com/repos/perawallet/connect/git/trees{/sha}",
        "updated_at": "2025-01-15T18:49:18Z",
        "url": "https://api.github.com/repos/perawallet/connect",
        "visibility": "public",
        "watchers": 67,
        "watchers_count": 67,
        "web_commit_signoff_required": false,
      },
      {
        "allow_forking": true,
        "archive_url": "https://api.github.com/repos/perawallet/connect-examples/{archive_format}{/ref}",
        "archived": false,
        "assignees_url": "https://api.github.com/repos/perawallet/connect-examples/assignees{/user}",
        "blobs_url": "https://api.github.com/repos/perawallet/connect-examples/git/blobs{/sha}",
        "branches_url": "https://api.github.com/repos/perawallet/connect-examples/branches{/branch}",
        "clone_url": "https://github.com/perawallet/connect-examples.git",
        "collaborators_url": "https://api.github.com/repos/perawallet/connect-examples/collaborators{/collaborator}",
        "comments_url": "https://api.github.com/repos/perawallet/connect-examples/comments{/number}",
        "commits_url": "https://api.github.com/repos/perawallet/connect-examples/commits{/sha}",
        "compare_url": "https://api.github.com/repos/perawallet/connect-examples/compare/{base}...{head}",
        "contents_url": "https://api.github.com/repos/perawallet/connect-examples/contents/{+path}",
        "contributors_url": "https://api.github.com/repos/perawallet/connect-examples/contributors",
        "created_at": "2022-07-28T13:39:56Z",
        "default_branch": "main",
        "deployments_url": "https://api.github.com/repos/perawallet/connect-examples/deployments",
        "description": "Example applications for \`@perawallet/connect\`",
        "disabled": false,
        "downloads_url": "https://api.github.com/repos/perawallet/connect-examples/downloads",
        "events_url": "https://api.github.com/repos/perawallet/connect-examples/events",
        "fork": false,
        "forks": 2,
        "forks_count": 2,
        "forks_url": "https://api.github.com/repos/perawallet/connect-examples/forks",
        "full_name": "perawallet/connect-examples",
        "git_commits_url": "https://api.github.com/repos/perawallet/connect-examples/git/commits{/sha}",
        "git_refs_url": "https://api.github.com/repos/perawallet/connect-examples/git/refs{/sha}",
        "git_tags_url": "https://api.github.com/repos/perawallet/connect-examples/git/tags{/sha}",
        "git_url": "git://github.com/perawallet/connect-examples.git",
        "has_discussions": false,
        "has_downloads": true,
        "has_issues": true,
        "has_pages": false,
        "has_projects": true,
        "has_wiki": true,
        "homepage": "https://github.com/perawallet/connect",
        "hooks_url": "https://api.github.com/repos/perawallet/connect-examples/hooks",
        "html_url": "https://github.com/perawallet/connect-examples",
        "id": 518861631,
        "is_template": false,
        "issue_comment_url": "https://api.github.com/repos/perawallet/connect-examples/issues/comments{/number}",
        "issue_events_url": "https://api.github.com/repos/perawallet/connect-examples/issues/events{/number}",
        "issues_url": "https://api.github.com/repos/perawallet/connect-examples/issues{/number}",
        "keys_url": "https://api.github.com/repos/perawallet/connect-examples/keys{/key_id}",
        "labels_url": "https://api.github.com/repos/perawallet/connect-examples/labels{/name}",
        "language": "JavaScript",
        "languages_url": "https://api.github.com/repos/perawallet/connect-examples/languages",
        "license": {
          "key": "apache-2.0",
          "name": "Apache License 2.0",
          "node_id": "MDc6TGljZW5zZTI=",
          "spdx_id": "Apache-2.0",
          "url": "https://api.github.com/licenses/apache-2.0",
        },
        "merges_url": "https://api.github.com/repos/perawallet/connect-examples/merges",
        "milestones_url": "https://api.github.com/repos/perawallet/connect-examples/milestones{/number}",
        "mirror_url": null,
        "name": "connect-examples",
        "node_id": "R_kgDOHu0zPw",
        "notifications_url": "https://api.github.com/repos/perawallet/connect-examples/notifications{?since,all,participating}",
        "open_issues": 1,
        "open_issues_count": 1,
        "owner": {
          "avatar_url": "https://avatars.githubusercontent.com/u/98968122?v=4",
          "events_url": "https://api.github.com/users/perawallet/events{/privacy}",
          "followers_url": "https://api.github.com/users/perawallet/followers",
          "following_url": "https://api.github.com/users/perawallet/following{/other_user}",
          "gists_url": "https://api.github.com/users/perawallet/gists{/gist_id}",
          "gravatar_id": "",
          "html_url": "https://github.com/perawallet",
          "id": 98968122,
          "login": "perawallet",
          "node_id": "O_kgDOBeYiOg",
          "organizations_url": "https://api.github.com/users/perawallet/orgs",
          "received_events_url": "https://api.github.com/users/perawallet/received_events",
          "repos_url": "https://api.github.com/users/perawallet/repos",
          "site_admin": false,
          "starred_url": "https://api.github.com/users/perawallet/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/perawallet/subscriptions",
          "type": "Organization",
          "url": "https://api.github.com/users/perawallet",
          "user_view_type": "public",
        },
        "permissions": {
          "admin": false,
          "maintain": false,
          "pull": true,
          "push": false,
          "triage": false,
        },
        "private": false,
        "pulls_url": "https://api.github.com/repos/perawallet/connect-examples/pulls{/number}",
        "pushed_at": "2023-01-19T11:37:21Z",
        "releases_url": "https://api.github.com/repos/perawallet/connect-examples/releases{/id}",
        "size": 758,
        "ssh_url": "git@github.com:perawallet/connect-examples.git",
        "stargazers_count": 3,
        "stargazers_url": "https://api.github.com/repos/perawallet/connect-examples/stargazers",
        "statuses_url": "https://api.github.com/repos/perawallet/connect-examples/statuses/{sha}",
        "subscribers_url": "https://api.github.com/repos/perawallet/connect-examples/subscribers",
        "subscription_url": "https://api.github.com/repos/perawallet/connect-examples/subscription",
        "svn_url": "https://github.com/perawallet/connect-examples",
        "tags_url": "https://api.github.com/repos/perawallet/connect-examples/tags",
        "teams_url": "https://api.github.com/repos/perawallet/connect-examples/teams",
        "topics": [],
        "trees_url": "https://api.github.com/repos/perawallet/connect-examples/git/trees{/sha}",
        "updated_at": "2023-01-31T20:07:48Z",
        "url": "https://api.github.com/repos/perawallet/connect-examples",
        "visibility": "public",
        "watchers": 3,
        "watchers_count": 3,
        "web_commit_signoff_required": false,
      },
      {
        "allow_forking": true,
        "archive_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/{archive_format}{/ref}",
        "archived": false,
        "assignees_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/assignees{/user}",
        "blobs_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/git/blobs{/sha}",
        "branches_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/branches{/branch}",
        "clone_url": "https://github.com/perawallet/go-algorand-sdk.git",
        "collaborators_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/collaborators{/collaborator}",
        "comments_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/comments{/number}",
        "commits_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/commits{/sha}",
        "compare_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/compare/{base}...{head}",
        "contents_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/contents/{+path}",
        "contributors_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/contributors",
        "created_at": "2022-08-29T11:55:50Z",
        "default_branch": "develop",
        "deployments_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/deployments",
        "description": "Algorand Golang SDK",
        "disabled": false,
        "downloads_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/downloads",
        "events_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/events",
        "fork": true,
        "forks": 1,
        "forks_count": 1,
        "forks_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/forks",
        "full_name": "perawallet/go-algorand-sdk",
        "git_commits_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/git/commits{/sha}",
        "git_refs_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/git/refs{/sha}",
        "git_tags_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/git/tags{/sha}",
        "git_url": "git://github.com/perawallet/go-algorand-sdk.git",
        "has_discussions": false,
        "has_downloads": true,
        "has_issues": false,
        "has_pages": false,
        "has_projects": true,
        "has_wiki": true,
        "homepage": "https://pkg.go.dev/github.com/algorand/go-algorand-sdk",
        "hooks_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/hooks",
        "html_url": "https://github.com/perawallet/go-algorand-sdk",
        "id": 530198347,
        "is_template": false,
        "issue_comment_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/issues/comments{/number}",
        "issue_events_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/issues/events{/number}",
        "issues_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/issues{/number}",
        "keys_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/keys{/key_id}",
        "labels_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/labels{/name}",
        "language": "Go",
        "languages_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/languages",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
        },
        "merges_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/merges",
        "milestones_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/milestones{/number}",
        "mirror_url": null,
        "name": "go-algorand-sdk",
        "node_id": "R_kgDOH5ovSw",
        "notifications_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/notifications{?since,all,participating}",
        "open_issues": 2,
        "open_issues_count": 2,
        "owner": {
          "avatar_url": "https://avatars.githubusercontent.com/u/98968122?v=4",
          "events_url": "https://api.github.com/users/perawallet/events{/privacy}",
          "followers_url": "https://api.github.com/users/perawallet/followers",
          "following_url": "https://api.github.com/users/perawallet/following{/other_user}",
          "gists_url": "https://api.github.com/users/perawallet/gists{/gist_id}",
          "gravatar_id": "",
          "html_url": "https://github.com/perawallet",
          "id": 98968122,
          "login": "perawallet",
          "node_id": "O_kgDOBeYiOg",
          "organizations_url": "https://api.github.com/users/perawallet/orgs",
          "received_events_url": "https://api.github.com/users/perawallet/received_events",
          "repos_url": "https://api.github.com/users/perawallet/repos",
          "site_admin": false,
          "starred_url": "https://api.github.com/users/perawallet/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/perawallet/subscriptions",
          "type": "Organization",
          "url": "https://api.github.com/users/perawallet",
          "user_view_type": "public",
        },
        "permissions": {
          "admin": false,
          "maintain": false,
          "pull": true,
          "push": false,
          "triage": false,
        },
        "private": false,
        "pulls_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/pulls{/number}",
        "pushed_at": "2023-02-15T16:41:16Z",
        "releases_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/releases{/id}",
        "size": 1781,
        "ssh_url": "git@github.com:perawallet/go-algorand-sdk.git",
        "stargazers_count": 0,
        "stargazers_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/stargazers",
        "statuses_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/statuses/{sha}",
        "subscribers_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/subscribers",
        "subscription_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/subscription",
        "svn_url": "https://github.com/perawallet/go-algorand-sdk",
        "tags_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/tags",
        "teams_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/teams",
        "topics": [],
        "trees_url": "https://api.github.com/repos/perawallet/go-algorand-sdk/git/trees{/sha}",
        "updated_at": "2022-12-26T10:23:33Z",
        "url": "https://api.github.com/repos/perawallet/go-algorand-sdk",
        "visibility": "public",
        "watchers": 0,
        "watchers_count": 0,
        "web_commit_signoff_required": false,
      },
      {
        "allow_forking": true,
        "archive_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/{archive_format}{/ref}",
        "archived": false,
        "assignees_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/assignees{/user}",
        "blobs_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/git/blobs{/sha}",
        "branches_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/branches{/branch}",
        "clone_url": "https://github.com/perawallet/mobile-to-ios-wallet-connection.git",
        "collaborators_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/collaborators{/collaborator}",
        "comments_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/comments{/number}",
        "commits_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/commits{/sha}",
        "compare_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/compare/{base}...{head}",
        "contents_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/contents/{+path}",
        "contributors_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/contributors",
        "created_at": "2022-09-07T11:47:46Z",
        "default_branch": "main",
        "deployments_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/deployments",
        "description": null,
        "disabled": false,
        "downloads_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/downloads",
        "events_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/events",
        "fork": false,
        "forks": 0,
        "forks_count": 0,
        "forks_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/forks",
        "full_name": "perawallet/mobile-to-ios-wallet-connection",
        "git_commits_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/git/commits{/sha}",
        "git_refs_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/git/refs{/sha}",
        "git_tags_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/git/tags{/sha}",
        "git_url": "git://github.com/perawallet/mobile-to-ios-wallet-connection.git",
        "has_discussions": false,
        "has_downloads": true,
        "has_issues": true,
        "has_pages": false,
        "has_projects": true,
        "has_wiki": true,
        "homepage": null,
        "hooks_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/hooks",
        "html_url": "https://github.com/perawallet/mobile-to-ios-wallet-connection",
        "id": 533741577,
        "is_template": false,
        "issue_comment_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/issues/comments{/number}",
        "issue_events_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/issues/events{/number}",
        "issues_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/issues{/number}",
        "keys_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/keys{/key_id}",
        "labels_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/labels{/name}",
        "language": "Swift",
        "languages_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/languages",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
        },
        "merges_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/merges",
        "milestones_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/milestones{/number}",
        "mirror_url": null,
        "name": "mobile-to-ios-wallet-connection",
        "node_id": "R_kgDOH9BACQ",
        "notifications_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/notifications{?since,all,participating}",
        "open_issues": 0,
        "open_issues_count": 0,
        "owner": {
          "avatar_url": "https://avatars.githubusercontent.com/u/98968122?v=4",
          "events_url": "https://api.github.com/users/perawallet/events{/privacy}",
          "followers_url": "https://api.github.com/users/perawallet/followers",
          "following_url": "https://api.github.com/users/perawallet/following{/other_user}",
          "gists_url": "https://api.github.com/users/perawallet/gists{/gist_id}",
          "gravatar_id": "",
          "html_url": "https://github.com/perawallet",
          "id": 98968122,
          "login": "perawallet",
          "node_id": "O_kgDOBeYiOg",
          "organizations_url": "https://api.github.com/users/perawallet/orgs",
          "received_events_url": "https://api.github.com/users/perawallet/received_events",
          "repos_url": "https://api.github.com/users/perawallet/repos",
          "site_admin": false,
          "starred_url": "https://api.github.com/users/perawallet/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/perawallet/subscriptions",
          "type": "Organization",
          "url": "https://api.github.com/users/perawallet",
          "user_view_type": "public",
        },
        "permissions": {
          "admin": false,
          "maintain": false,
          "pull": true,
          "push": false,
          "triage": false,
        },
        "private": false,
        "pulls_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/pulls{/number}",
        "pushed_at": "2023-04-05T12:50:24Z",
        "releases_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/releases{/id}",
        "size": 37,
        "ssh_url": "git@github.com:perawallet/mobile-to-ios-wallet-connection.git",
        "stargazers_count": 1,
        "stargazers_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/stargazers",
        "statuses_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/statuses/{sha}",
        "subscribers_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/subscribers",
        "subscription_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/subscription",
        "svn_url": "https://github.com/perawallet/mobile-to-ios-wallet-connection",
        "tags_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/tags",
        "teams_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/teams",
        "topics": [],
        "trees_url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection/git/trees{/sha}",
        "updated_at": "2023-04-11T13:28:57Z",
        "url": "https://api.github.com/repos/perawallet/mobile-to-ios-wallet-connection",
        "visibility": "public",
        "watchers": 1,
        "watchers_count": 1,
        "web_commit_signoff_required": false,
      },
      {
        "allow_forking": true,
        "archive_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/{archive_format}{/ref}",
        "archived": false,
        "assignees_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/assignees{/user}",
        "blobs_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/git/blobs{/sha}",
        "branches_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/branches{/branch}",
        "clone_url": "https://github.com/perawallet/pera-demo-dapp.git",
        "collaborators_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/collaborators{/collaborator}",
        "comments_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/comments{/number}",
        "commits_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/commits{/sha}",
        "compare_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/compare/{base}...{head}",
        "contents_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/contents/{+path}",
        "contributors_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/contributors",
        "created_at": "2022-12-27T13:30:01Z",
        "default_branch": "main",
        "deployments_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/deployments",
        "description": "Example dApp for Pera Wallet",
        "disabled": false,
        "downloads_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/downloads",
        "events_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/events",
        "fork": false,
        "forks": 2,
        "forks_count": 2,
        "forks_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/forks",
        "full_name": "perawallet/pera-demo-dapp",
        "git_commits_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/git/commits{/sha}",
        "git_refs_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/git/refs{/sha}",
        "git_tags_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/git/tags{/sha}",
        "git_url": "git://github.com/perawallet/pera-demo-dapp.git",
        "has_discussions": false,
        "has_downloads": true,
        "has_issues": true,
        "has_pages": true,
        "has_projects": true,
        "has_wiki": true,
        "homepage": "https://perawallet.github.io/pera-demo-dapp/",
        "hooks_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/hooks",
        "html_url": "https://github.com/perawallet/pera-demo-dapp",
        "id": 582651173,
        "is_template": false,
        "issue_comment_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/issues/comments{/number}",
        "issue_events_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/issues/events{/number}",
        "issues_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/issues{/number}",
        "keys_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/keys{/key_id}",
        "labels_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/labels{/name}",
        "language": "TypeScript",
        "languages_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/languages",
        "license": null,
        "merges_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/merges",
        "milestones_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/milestones{/number}",
        "mirror_url": null,
        "name": "pera-demo-dapp",
        "node_id": "R_kgDOIrqNJQ",
        "notifications_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/notifications{?since,all,participating}",
        "open_issues": 3,
        "open_issues_count": 3,
        "owner": {
          "avatar_url": "https://avatars.githubusercontent.com/u/98968122?v=4",
          "events_url": "https://api.github.com/users/perawallet/events{/privacy}",
          "followers_url": "https://api.github.com/users/perawallet/followers",
          "following_url": "https://api.github.com/users/perawallet/following{/other_user}",
          "gists_url": "https://api.github.com/users/perawallet/gists{/gist_id}",
          "gravatar_id": "",
          "html_url": "https://github.com/perawallet",
          "id": 98968122,
          "login": "perawallet",
          "node_id": "O_kgDOBeYiOg",
          "organizations_url": "https://api.github.com/users/perawallet/orgs",
          "received_events_url": "https://api.github.com/users/perawallet/received_events",
          "repos_url": "https://api.github.com/users/perawallet/repos",
          "site_admin": false,
          "starred_url": "https://api.github.com/users/perawallet/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/perawallet/subscriptions",
          "type": "Organization",
          "url": "https://api.github.com/users/perawallet",
          "user_view_type": "public",
        },
        "permissions": {
          "admin": false,
          "maintain": false,
          "pull": true,
          "push": false,
          "triage": false,
        },
        "private": false,
        "pulls_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/pulls{/number}",
        "pushed_at": "2024-12-03T10:46:53Z",
        "releases_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/releases{/id}",
        "size": 17297,
        "ssh_url": "git@github.com:perawallet/pera-demo-dapp.git",
        "stargazers_count": 3,
        "stargazers_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/stargazers",
        "statuses_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/statuses/{sha}",
        "subscribers_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/subscribers",
        "subscription_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/subscription",
        "svn_url": "https://github.com/perawallet/pera-demo-dapp",
        "tags_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/tags",
        "teams_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/teams",
        "topics": [],
        "trees_url": "https://api.github.com/repos/perawallet/pera-demo-dapp/git/trees{/sha}",
        "updated_at": "2024-12-03T09:04:46Z",
        "url": "https://api.github.com/repos/perawallet/pera-demo-dapp",
        "visibility": "public",
        "watchers": 3,
        "watchers_count": 3,
        "web_commit_signoff_required": false,
      },
      {
        "allow_forking": true,
        "archive_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/{archive_format}{/ref}",
        "archived": false,
        "assignees_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/assignees{/user}",
        "blobs_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/git/blobs{/sha}",
        "branches_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/branches{/branch}",
        "clone_url": "https://github.com/perawallet/WalletConnectSwift.git",
        "collaborators_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/collaborators{/collaborator}",
        "comments_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/comments{/number}",
        "commits_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/commits{/sha}",
        "compare_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/compare/{base}...{head}",
        "contents_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/contents/{+path}",
        "contributors_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/contributors",
        "created_at": "2023-01-05T20:02:54Z",
        "default_branch": "master",
        "deployments_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/deployments",
        "description": "WalletConnect Swift SDK",
        "disabled": false,
        "downloads_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/downloads",
        "events_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/events",
        "fork": true,
        "forks": 0,
        "forks_count": 0,
        "forks_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/forks",
        "full_name": "perawallet/WalletConnectSwift",
        "git_commits_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/git/commits{/sha}",
        "git_refs_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/git/refs{/sha}",
        "git_tags_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/git/tags{/sha}",
        "git_url": "git://github.com/perawallet/WalletConnectSwift.git",
        "has_discussions": false,
        "has_downloads": true,
        "has_issues": false,
        "has_pages": false,
        "has_projects": true,
        "has_wiki": true,
        "homepage": null,
        "hooks_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/hooks",
        "html_url": "https://github.com/perawallet/WalletConnectSwift",
        "id": 585684556,
        "is_template": false,
        "issue_comment_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/issues/comments{/number}",
        "issue_events_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/issues/events{/number}",
        "issues_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/issues{/number}",
        "keys_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/keys{/key_id}",
        "labels_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/labels{/name}",
        "language": "Swift",
        "languages_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/languages",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
        },
        "merges_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/merges",
        "milestones_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/milestones{/number}",
        "mirror_url": null,
        "name": "WalletConnectSwift",
        "node_id": "R_kgDOIujWTA",
        "notifications_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/notifications{?since,all,participating}",
        "open_issues": 0,
        "open_issues_count": 0,
        "owner": {
          "avatar_url": "https://avatars.githubusercontent.com/u/98968122?v=4",
          "events_url": "https://api.github.com/users/perawallet/events{/privacy}",
          "followers_url": "https://api.github.com/users/perawallet/followers",
          "following_url": "https://api.github.com/users/perawallet/following{/other_user}",
          "gists_url": "https://api.github.com/users/perawallet/gists{/gist_id}",
          "gravatar_id": "",
          "html_url": "https://github.com/perawallet",
          "id": 98968122,
          "login": "perawallet",
          "node_id": "O_kgDOBeYiOg",
          "organizations_url": "https://api.github.com/users/perawallet/orgs",
          "received_events_url": "https://api.github.com/users/perawallet/received_events",
          "repos_url": "https://api.github.com/users/perawallet/repos",
          "site_admin": false,
          "starred_url": "https://api.github.com/users/perawallet/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/perawallet/subscriptions",
          "type": "Organization",
          "url": "https://api.github.com/users/perawallet",
          "user_view_type": "public",
        },
        "permissions": {
          "admin": false,
          "maintain": false,
          "pull": true,
          "push": false,
          "triage": false,
        },
        "private": false,
        "pulls_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/pulls{/number}",
        "pushed_at": "2024-12-19T17:00:57Z",
        "releases_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/releases{/id}",
        "size": 491,
        "ssh_url": "git@github.com:perawallet/WalletConnectSwift.git",
        "stargazers_count": 1,
        "stargazers_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/stargazers",
        "statuses_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/statuses/{sha}",
        "subscribers_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/subscribers",
        "subscription_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/subscription",
        "svn_url": "https://github.com/perawallet/WalletConnectSwift",
        "tags_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/tags",
        "teams_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/teams",
        "topics": [],
        "trees_url": "https://api.github.com/repos/perawallet/WalletConnectSwift/git/trees{/sha}",
        "updated_at": "2024-12-19T16:45:03Z",
        "url": "https://api.github.com/repos/perawallet/WalletConnectSwift",
        "visibility": "public",
        "watchers": 1,
        "watchers_count": 1,
        "web_commit_signoff_required": false,
      },
      {
        "allow_forking": true,
        "archive_url": "https://api.github.com/repos/perawallet/pera-web-wallet/{archive_format}{/ref}",
        "archived": false,
        "assignees_url": "https://api.github.com/repos/perawallet/pera-web-wallet/assignees{/user}",
        "blobs_url": "https://api.github.com/repos/perawallet/pera-web-wallet/git/blobs{/sha}",
        "branches_url": "https://api.github.com/repos/perawallet/pera-web-wallet/branches{/branch}",
        "clone_url": "https://github.com/perawallet/pera-web-wallet.git",
        "collaborators_url": "https://api.github.com/repos/perawallet/pera-web-wallet/collaborators{/collaborator}",
        "comments_url": "https://api.github.com/repos/perawallet/pera-web-wallet/comments{/number}",
        "commits_url": "https://api.github.com/repos/perawallet/pera-web-wallet/commits{/sha}",
        "compare_url": "https://api.github.com/repos/perawallet/pera-web-wallet/compare/{base}...{head}",
        "contents_url": "https://api.github.com/repos/perawallet/pera-web-wallet/contents/{+path}",
        "contributors_url": "https://api.github.com/repos/perawallet/pera-web-wallet/contributors",
        "created_at": "2023-01-16T18:53:06Z",
        "default_branch": "main",
        "deployments_url": "https://api.github.com/repos/perawallet/pera-web-wallet/deployments",
        "description": "Pera Web Wallet Application",
        "disabled": false,
        "downloads_url": "https://api.github.com/repos/perawallet/pera-web-wallet/downloads",
        "events_url": "https://api.github.com/repos/perawallet/pera-web-wallet/events",
        "fork": false,
        "forks": 14,
        "forks_count": 14,
        "forks_url": "https://api.github.com/repos/perawallet/pera-web-wallet/forks",
        "full_name": "perawallet/pera-web-wallet",
        "git_commits_url": "https://api.github.com/repos/perawallet/pera-web-wallet/git/commits{/sha}",
        "git_refs_url": "https://api.github.com/repos/perawallet/pera-web-wallet/git/refs{/sha}",
        "git_tags_url": "https://api.github.com/repos/perawallet/pera-web-wallet/git/tags{/sha}",
        "git_url": "git://github.com/perawallet/pera-web-wallet.git",
        "has_discussions": false,
        "has_downloads": true,
        "has_issues": true,
        "has_pages": false,
        "has_projects": true,
        "has_wiki": true,
        "homepage": null,
        "hooks_url": "https://api.github.com/repos/perawallet/pera-web-wallet/hooks",
        "html_url": "https://github.com/perawallet/pera-web-wallet",
        "id": 589710070,
        "is_template": false,
        "issue_comment_url": "https://api.github.com/repos/perawallet/pera-web-wallet/issues/comments{/number}",
        "issue_events_url": "https://api.github.com/repos/perawallet/pera-web-wallet/issues/events{/number}",
        "issues_url": "https://api.github.com/repos/perawallet/pera-web-wallet/issues{/number}",
        "keys_url": "https://api.github.com/repos/perawallet/pera-web-wallet/keys{/key_id}",
        "labels_url": "https://api.github.com/repos/perawallet/pera-web-wallet/labels{/name}",
        "language": "TypeScript",
        "languages_url": "https://api.github.com/repos/perawallet/pera-web-wallet/languages",
        "license": {
          "key": "other",
          "name": "Other",
          "node_id": "MDc6TGljZW5zZTA=",
          "spdx_id": "NOASSERTION",
          "url": null,
        },
        "merges_url": "https://api.github.com/repos/perawallet/pera-web-wallet/merges",
        "milestones_url": "https://api.github.com/repos/perawallet/pera-web-wallet/milestones{/number}",
        "mirror_url": null,
        "name": "pera-web-wallet",
        "node_id": "R_kgDOIyZC9g",
        "notifications_url": "https://api.github.com/repos/perawallet/pera-web-wallet/notifications{?since,all,participating}",
        "open_issues": 5,
        "open_issues_count": 5,
        "owner": {
          "avatar_url": "https://avatars.githubusercontent.com/u/98968122?v=4",
          "events_url": "https://api.github.com/users/perawallet/events{/privacy}",
          "followers_url": "https://api.github.com/users/perawallet/followers",
          "following_url": "https://api.github.com/users/perawallet/following{/other_user}",
          "gists_url": "https://api.github.com/users/perawallet/gists{/gist_id}",
          "gravatar_id": "",
          "html_url": "https://github.com/perawallet",
          "id": 98968122,
          "login": "perawallet",
          "node_id": "O_kgDOBeYiOg",
          "organizations_url": "https://api.github.com/users/perawallet/orgs",
          "received_events_url": "https://api.github.com/users/perawallet/received_events",
          "repos_url": "https://api.github.com/users/perawallet/repos",
          "site_admin": false,
          "starred_url": "https://api.github.com/users/perawallet/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/perawallet/subscriptions",
          "type": "Organization",
          "url": "https://api.github.com/users/perawallet",
          "user_view_type": "public",
        },
        "permissions": {
          "admin": false,
          "maintain": false,
          "pull": true,
          "push": false,
          "triage": false,
        },
        "private": false,
        "pulls_url": "https://api.github.com/repos/perawallet/pera-web-wallet/pulls{/number}",
        "pushed_at": "2023-11-10T20:13:45Z",
        "releases_url": "https://api.github.com/repos/perawallet/pera-web-wallet/releases{/id}",
        "size": 5759,
        "ssh_url": "git@github.com:perawallet/pera-web-wallet.git",
        "stargazers_count": 14,
        "stargazers_url": "https://api.github.com/repos/perawallet/pera-web-wallet/stargazers",
        "statuses_url": "https://api.github.com/repos/perawallet/pera-web-wallet/statuses/{sha}",
        "subscribers_url": "https://api.github.com/repos/perawallet/pera-web-wallet/subscribers",
        "subscription_url": "https://api.github.com/repos/perawallet/pera-web-wallet/subscription",
        "svn_url": "https://github.com/perawallet/pera-web-wallet",
        "tags_url": "https://api.github.com/repos/perawallet/pera-web-wallet/tags",
        "teams_url": "https://api.github.com/repos/perawallet/pera-web-wallet/teams",
        "topics": [],
        "trees_url": "https://api.github.com/repos/perawallet/pera-web-wallet/git/trees{/sha}",
        "updated_at": "2024-08-31T10:17:24Z",
        "url": "https://api.github.com/repos/perawallet/pera-web-wallet",
        "visibility": "public",
        "watchers": 14,
        "watchers_count": 14,
        "web_commit_signoff_required": false,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={[]}
  style={
    {
      "flex": 1,
    }
  }
  testID="grid-list"
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "gap": 10,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderColor": "#FFFFFF",
              "borderRadius": 20,
              "borderWidth": 1,
              "flex": 1,
              "gap": 10,
              "maxWidth": 350,
              "opacity": 1,
              "padding": 15,
            }
          }
          testID="grid-item"
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={5}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                source={
                  [
                    {
                      "uri": "https://avatars.githubusercontent.com/u/98968122?v=4",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 5,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                perawallet
              </Text>
            </View>
          </View>
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                undefined,
                {
                  "fontSize": 16,
                  "fontWeight": "700",
                },
              ]
            }
            weight="bold"
          >
            pera-wallet
          </Text>
          <Text
            numberOfLines={3}
            size="small"
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                {
                  "flex": 1,
                },
                {
                  "fontSize": 12,
                  "fontWeight": "400",
                },
              ]
            }
          >
            Source code for Pera Wallet, simply the best Algorand wallet.
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "gap": 10,
              }
            }
          >
            <View
              style={
                {
                  "backgroundColor": "#ffffff22",
                  "borderRadius": 20,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                }
              }
            >
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Public
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderRadius": 5,
                      "height": 10,
                      "width": 10,
                    },
                    {
                      "backgroundColor": "#F05138",
                    },
                  ]
                }
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Swift
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                190
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                60
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                22
              </Text>
            </View>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderColor": "#FFFFFF",
              "borderRadius": 20,
              "borderWidth": 1,
              "flex": 1,
              "gap": 10,
              "maxWidth": 350,
              "opacity": 1,
              "padding": 15,
            }
          }
          testID="grid-item"
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={5}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                source={
                  [
                    {
                      "uri": "https://avatars.githubusercontent.com/u/98968122?v=4",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 5,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                perawallet
              </Text>
            </View>
          </View>
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                undefined,
                {
                  "fontSize": 16,
                  "fontWeight": "700",
                },
              ]
            }
            weight="bold"
          >
            kotlin-walletconnect-lib
          </Text>
          <Text
            numberOfLines={3}
            size="small"
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                {
                  "flex": 1,
                },
                {
                  "fontSize": 12,
                  "fontWeight": "400",
                },
              ]
            }
          >
            library to use WalletConnect with Kotlin or Java
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "gap": 10,
              }
            }
          >
            <View
              style={
                {
                  "backgroundColor": "#ffffff22",
                  "borderRadius": 20,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                }
              }
            >
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Public
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderRadius": 5,
                      "height": 10,
                      "width": 10,
                    },
                    {
                      "backgroundColor": "#A97BFF",
                    },
                  ]
                }
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Kotlin
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                0
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                2
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                1
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "gap": 10,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderColor": "#FFFFFF",
              "borderRadius": 20,
              "borderWidth": 1,
              "flex": 1,
              "gap": 10,
              "maxWidth": 350,
              "opacity": 1,
              "padding": 15,
            }
          }
          testID="grid-item"
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={5}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                source={
                  [
                    {
                      "uri": "https://avatars.githubusercontent.com/u/98968122?v=4",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 5,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                perawallet
              </Text>
            </View>
          </View>
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                undefined,
                {
                  "fontSize": 16,
                  "fontWeight": "700",
                },
              ]
            }
            weight="bold"
          >
            ActiveLabel.swift
          </Text>
          <Text
            numberOfLines={3}
            size="small"
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                {
                  "flex": 1,
                },
                {
                  "fontSize": 12,
                  "fontWeight": "400",
                },
              ]
            }
          >
            UILabel drop-in replacement supporting Hashtags (#), Mentions (@) and URLs (http://) written in Swift
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "gap": 10,
              }
            }
          >
            <View
              style={
                {
                  "backgroundColor": "#ffffff22",
                  "borderRadius": 20,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                }
              }
            >
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Public
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderRadius": 5,
                      "height": 10,
                      "width": 10,
                    },
                    {
                      "backgroundColor": "#F05138",
                    },
                  ]
                }
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Swift
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                1
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                1
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                0
              </Text>
            </View>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderColor": "#FFFFFF",
              "borderRadius": 20,
              "borderWidth": 1,
              "flex": 1,
              "gap": 10,
              "maxWidth": 350,
              "opacity": 1,
              "padding": 15,
            }
          }
          testID="grid-item"
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={5}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                source={
                  [
                    {
                      "uri": "https://avatars.githubusercontent.com/u/98968122?v=4",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 5,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                perawallet
              </Text>
            </View>
          </View>
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                undefined,
                {
                  "fontSize": 16,
                  "fontWeight": "700",
                },
              ]
            }
            weight="bold"
          >
            connect
          </Text>
          <Text
            numberOfLines={3}
            size="small"
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                {
                  "flex": 1,
                },
                {
                  "fontSize": 12,
                  "fontWeight": "400",
                },
              ]
            }
          >
            JavaScript SDK for integrating Pera Wallet to web applications.
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "gap": 10,
              }
            }
          >
            <View
              style={
                {
                  "backgroundColor": "#ffffff22",
                  "borderRadius": 20,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                }
              }
            >
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Public
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderRadius": 5,
                      "height": 10,
                      "width": 10,
                    },
                    {
                      "backgroundColor": "#3178c6",
                    },
                  ]
                }
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                TypeScript
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                67
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                21
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                19
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "gap": 10,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderColor": "#FFFFFF",
              "borderRadius": 20,
              "borderWidth": 1,
              "flex": 1,
              "gap": 10,
              "maxWidth": 350,
              "opacity": 1,
              "padding": 15,
            }
          }
          testID="grid-item"
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={5}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                source={
                  [
                    {
                      "uri": "https://avatars.githubusercontent.com/u/98968122?v=4",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 5,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                perawallet
              </Text>
            </View>
          </View>
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                undefined,
                {
                  "fontSize": 16,
                  "fontWeight": "700",
                },
              ]
            }
            weight="bold"
          >
            connect-examples
          </Text>
          <Text
            numberOfLines={3}
            size="small"
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                {
                  "flex": 1,
                },
                {
                  "fontSize": 12,
                  "fontWeight": "400",
                },
              ]
            }
          >
            Example applications for \`@perawallet/connect\`
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "gap": 10,
              }
            }
          >
            <View
              style={
                {
                  "backgroundColor": "#ffffff22",
                  "borderRadius": 20,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                }
              }
            >
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Public
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderRadius": 5,
                      "height": 10,
                      "width": 10,
                    },
                    {
                      "backgroundColor": "#f1e05a",
                    },
                  ]
                }
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                JavaScript
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                3
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                2
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                1
              </Text>
            </View>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderColor": "#FFFFFF",
              "borderRadius": 20,
              "borderWidth": 1,
              "flex": 1,
              "gap": 10,
              "maxWidth": 350,
              "opacity": 1,
              "padding": 15,
            }
          }
          testID="grid-item"
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={5}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                source={
                  [
                    {
                      "uri": "https://avatars.githubusercontent.com/u/98968122?v=4",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 5,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                perawallet
              </Text>
            </View>
          </View>
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                undefined,
                {
                  "fontSize": 16,
                  "fontWeight": "700",
                },
              ]
            }
            weight="bold"
          >
            go-algorand-sdk
          </Text>
          <Text
            numberOfLines={3}
            size="small"
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                {
                  "flex": 1,
                },
                {
                  "fontSize": 12,
                  "fontWeight": "400",
                },
              ]
            }
          >
            Algorand Golang SDK
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "gap": 10,
              }
            }
          >
            <View
              style={
                {
                  "backgroundColor": "#ffffff22",
                  "borderRadius": 20,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                }
              }
            >
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Public
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderRadius": 5,
                      "height": 10,
                      "width": 10,
                    },
                    {
                      "backgroundColor": "#00ADD8",
                    },
                  ]
                }
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Go
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                0
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                1
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                2
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "gap": 10,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderColor": "#FFFFFF",
              "borderRadius": 20,
              "borderWidth": 1,
              "flex": 1,
              "gap": 10,
              "maxWidth": 350,
              "opacity": 1,
              "padding": 15,
            }
          }
          testID="grid-item"
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={5}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                source={
                  [
                    {
                      "uri": "https://avatars.githubusercontent.com/u/98968122?v=4",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 5,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                perawallet
              </Text>
            </View>
          </View>
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                undefined,
                {
                  "fontSize": 16,
                  "fontWeight": "700",
                },
              ]
            }
            weight="bold"
          >
            mobile-to-ios-wallet-connection
          </Text>
          <Text
            numberOfLines={3}
            size="small"
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                {
                  "flex": 1,
                },
                {
                  "fontSize": 12,
                  "fontWeight": "400",
                },
              ]
            }
          />
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "gap": 10,
              }
            }
          >
            <View
              style={
                {
                  "backgroundColor": "#ffffff22",
                  "borderRadius": 20,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                }
              }
            >
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Public
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderRadius": 5,
                      "height": 10,
                      "width": 10,
                    },
                    {
                      "backgroundColor": "#F05138",
                    },
                  ]
                }
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Swift
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                1
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                0
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                0
              </Text>
            </View>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderColor": "#FFFFFF",
              "borderRadius": 20,
              "borderWidth": 1,
              "flex": 1,
              "gap": 10,
              "maxWidth": 350,
              "opacity": 1,
              "padding": 15,
            }
          }
          testID="grid-item"
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={5}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                source={
                  [
                    {
                      "uri": "https://avatars.githubusercontent.com/u/98968122?v=4",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 5,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                perawallet
              </Text>
            </View>
          </View>
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                undefined,
                {
                  "fontSize": 16,
                  "fontWeight": "700",
                },
              ]
            }
            weight="bold"
          >
            pera-demo-dapp
          </Text>
          <Text
            numberOfLines={3}
            size="small"
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                {
                  "flex": 1,
                },
                {
                  "fontSize": 12,
                  "fontWeight": "400",
                },
              ]
            }
          >
            Example dApp for Pera Wallet
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "gap": 10,
              }
            }
          >
            <View
              style={
                {
                  "backgroundColor": "#ffffff22",
                  "borderRadius": 20,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                }
              }
            >
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Public
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderRadius": 5,
                      "height": 10,
                      "width": 10,
                    },
                    {
                      "backgroundColor": "#3178c6",
                    },
                  ]
                }
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                TypeScript
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                3
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                2
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                3
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "gap": 10,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderColor": "#FFFFFF",
              "borderRadius": 20,
              "borderWidth": 1,
              "flex": 1,
              "gap": 10,
              "maxWidth": 350,
              "opacity": 1,
              "padding": 15,
            }
          }
          testID="grid-item"
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={5}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                source={
                  [
                    {
                      "uri": "https://avatars.githubusercontent.com/u/98968122?v=4",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 5,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                perawallet
              </Text>
            </View>
          </View>
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                undefined,
                {
                  "fontSize": 16,
                  "fontWeight": "700",
                },
              ]
            }
            weight="bold"
          >
            WalletConnectSwift
          </Text>
          <Text
            numberOfLines={3}
            size="small"
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                {
                  "flex": 1,
                },
                {
                  "fontSize": 12,
                  "fontWeight": "400",
                },
              ]
            }
          >
            WalletConnect Swift SDK
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "gap": 10,
              }
            }
          >
            <View
              style={
                {
                  "backgroundColor": "#ffffff22",
                  "borderRadius": 20,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                }
              }
            >
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Public
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderRadius": 5,
                      "height": 10,
                      "width": 10,
                    },
                    {
                      "backgroundColor": "#F05138",
                    },
                  ]
                }
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Swift
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                1
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                0
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                0
              </Text>
            </View>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderColor": "#FFFFFF",
              "borderRadius": 20,
              "borderWidth": 1,
              "flex": 1,
              "gap": 10,
              "maxWidth": 350,
              "opacity": 1,
              "padding": 15,
            }
          }
          testID="grid-item"
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <ViewManagerAdapter_ExpoImage
                borderRadius={5}
                containerViewRef={"[React.ref]"}
                contentFit="cover"
                contentPosition={
                  {
                    "left": "50%",
                    "top": "50%",
                  }
                }
                height={20}
                nativeViewRef={"[React.ref]"}
                onError={[Function]}
                onLoad={[Function]}
                onLoadStart={[Function]}
                onProgress={[Function]}
                placeholder={[]}
                source={
                  [
                    {
                      "uri": "https://avatars.githubusercontent.com/u/98968122?v=4",
                    },
                  ]
                }
                style={
                  {
                    "borderRadius": 5,
                    "height": 20,
                    "width": 20,
                  }
                }
                transition={null}
                width={20}
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                perawallet
              </Text>
            </View>
          </View>
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                undefined,
                {
                  "fontSize": 16,
                  "fontWeight": "700",
                },
              ]
            }
            weight="bold"
          >
            pera-web-wallet
          </Text>
          <Text
            numberOfLines={3}
            size="small"
            style={
              [
                {
                  "color": "#FFFFFF",
                },
                {
                  "flex": 1,
                },
                {
                  "fontSize": 12,
                  "fontWeight": "400",
                },
              ]
            }
          >
            Pera Web Wallet Application
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "gap": 10,
              }
            }
          >
            <View
              style={
                {
                  "backgroundColor": "#ffffff22",
                  "borderRadius": 20,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                }
              }
            >
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Public
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "borderRadius": 5,
                      "height": 10,
                      "width": 10,
                    },
                    {
                      "backgroundColor": "#3178c6",
                    },
                  ]
                }
              />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                TypeScript
              </Text>
            </View>
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                14
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                14
              </Text>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 5,
                }
              }
            >
              <svg />
              <Text
                size="small"
                style={
                  [
                    {
                      "color": "#FFFFFF",
                    },
                    undefined,
                    {
                      "fontSize": 12,
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                5
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
